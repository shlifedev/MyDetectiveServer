




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

            
using Nettention.Proud; 
            
using System.Collections.Generic; 
namespace Game.Network.S2C
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool SendTest(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string value)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SendTest;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, value);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SendTest, Common.SendTest);
}

public bool SendTest(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string value)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SendTest;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, value);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SendTest, Common.SendTest);
}
public bool NotifyJoinPlayer(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, GameServer.Struct.NEntityList joinedPlayers)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyJoinPlayer;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, joinedPlayers);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyJoinPlayer, Common.NotifyJoinPlayer);
}

public bool NotifyJoinPlayer(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, GameServer.Struct.NEntityList joinedPlayers)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyJoinPlayer;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, joinedPlayers);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyJoinPlayer, Common.NotifyJoinPlayer);
}
public bool NotifyLeavePlayeR(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int playerHostId)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyLeavePlayeR;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, playerHostId);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyLeavePlayeR, Common.NotifyLeavePlayeR);
}

public bool NotifyLeavePlayeR(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int playerHostId)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyLeavePlayeR;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, playerHostId);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyLeavePlayeR, Common.NotifyLeavePlayeR);
}
public bool NotifyServerMessage(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string msg)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyServerMessage;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, msg);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyServerMessage, Common.NotifyServerMessage);
}

public bool NotifyServerMessage(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string msg)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyServerMessage;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, msg);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyServerMessage, Common.NotifyServerMessage);
}
public bool NotifyPlayerJobs(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int job)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerJobs;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, job);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerJobs, Common.NotifyPlayerJobs);
}

public bool NotifyPlayerJobs(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int job)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerJobs;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, job);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerJobs, Common.NotifyPlayerJobs);
}
public bool NotifyItemCreate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int id, int itemIndex, UnityEngine.Vector3 createdPosition)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyItemCreate;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, id);
		MyMarshaler.Write(__msg, itemIndex);
		MyMarshaler.Write(__msg, createdPosition);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyItemCreate, Common.NotifyItemCreate);
}

public bool NotifyItemCreate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int id, int itemIndex, UnityEngine.Vector3 createdPosition)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyItemCreate;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, id);
MyMarshaler.Write(__msg, itemIndex);
MyMarshaler.Write(__msg, createdPosition);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyItemCreate, Common.NotifyItemCreate);
}
public bool NotifyEntityMove(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int id, UnityEngine.Vector3 position, UnityEngine.Vector3 vel)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyEntityMove;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, id);
		MyMarshaler.Write(__msg, position);
		MyMarshaler.Write(__msg, vel);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyEntityMove, Common.NotifyEntityMove);
}

public bool NotifyEntityMove(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int id, UnityEngine.Vector3 position, UnityEngine.Vector3 vel)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyEntityMove;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, id);
MyMarshaler.Write(__msg, position);
MyMarshaler.Write(__msg, vel);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyEntityMove, Common.NotifyEntityMove);
}
public bool NotifyPlayerCreate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int ownerHid, int entityId, UnityEngine.Vector3 createdPosition)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerCreate;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, ownerHid);
		MyMarshaler.Write(__msg, entityId);
		MyMarshaler.Write(__msg, createdPosition);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerCreate, Common.NotifyPlayerCreate);
}

public bool NotifyPlayerCreate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int ownerHid, int entityId, UnityEngine.Vector3 createdPosition)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerCreate;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, ownerHid);
MyMarshaler.Write(__msg, entityId);
MyMarshaler.Write(__msg, createdPosition);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerCreate, Common.NotifyPlayerCreate);
}
public bool NotifyNPCList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, GameServer.Struct.NNPCEntityList npcList)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNPCList;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, npcList);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNPCList, Common.NotifyNPCList);
}

public bool NotifyNPCList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, GameServer.Struct.NNPCEntityList npcList)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNPCList;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, npcList);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNPCList, Common.NotifyNPCList);
}
public bool NotifyNPCCreate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, GameServer.Struct.NEntity npcData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNPCCreate;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, npcData);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNPCCreate, Common.NotifyNPCCreate);
}

public bool NotifyNPCCreate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, GameServer.Struct.NEntity npcData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNPCCreate;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, npcData);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNPCCreate, Common.NotifyNPCCreate);
}
public bool NotifyDestroyEntity(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int entityId)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyDestroyEntity;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, entityId);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyDestroyEntity, Common.NotifyDestroyEntity);
}

public bool NotifyDestroyEntity(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int entityId)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyDestroyEntity;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, entityId);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyDestroyEntity, Common.NotifyDestroyEntity);
}
public bool NotifyInventoryItemAdd(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, GameServer.Struct.Item item)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyInventoryItemAdd;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, item);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyInventoryItemAdd, Common.NotifyInventoryItemAdd);
}

public bool NotifyInventoryItemAdd(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, GameServer.Struct.Item item)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyInventoryItemAdd;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, item);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyInventoryItemAdd, Common.NotifyInventoryItemAdd);
}
public bool GivePlayerItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, HostID PlayerHostID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GivePlayerItem;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, PlayerHostID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GivePlayerItem, Common.GivePlayerItem);
}

public bool GivePlayerItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, HostID PlayerHostID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GivePlayerItem;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, PlayerHostID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GivePlayerItem, Common.GivePlayerItem);
}
public bool NotifyPlayerItemUse(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int targetEntityId, int itemEntityId)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerItemUse;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, targetEntityId);
		MyMarshaler.Write(__msg, itemEntityId);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerItemUse, Common.NotifyPlayerItemUse);
}

public bool NotifyPlayerItemUse(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int targetEntityId, int itemEntityId)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerItemUse;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, targetEntityId);
MyMarshaler.Write(__msg, itemEntityId);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerItemUse, Common.NotifyPlayerItemUse);
}
public bool NotifyEntityBuffAdd(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int entityId, GameServer.Struct.NBuff buffData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyEntityBuffAdd;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, entityId);
		MyMarshaler.Write(__msg, buffData);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyEntityBuffAdd, Common.NotifyEntityBuffAdd);
}

public bool NotifyEntityBuffAdd(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int entityId, GameServer.Struct.NBuff buffData)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyEntityBuffAdd;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, entityId);
MyMarshaler.Write(__msg, buffData);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyEntityBuffAdd, Common.NotifyEntityBuffAdd);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_SendTest="SendTest";
public const string RmiName_NotifyJoinPlayer="NotifyJoinPlayer";
public const string RmiName_NotifyLeavePlayeR="NotifyLeavePlayeR";
public const string RmiName_NotifyServerMessage="NotifyServerMessage";
public const string RmiName_NotifyPlayerJobs="NotifyPlayerJobs";
public const string RmiName_NotifyItemCreate="NotifyItemCreate";
public const string RmiName_NotifyEntityMove="NotifyEntityMove";
public const string RmiName_NotifyPlayerCreate="NotifyPlayerCreate";
public const string RmiName_NotifyNPCList="NotifyNPCList";
public const string RmiName_NotifyNPCCreate="NotifyNPCCreate";
public const string RmiName_NotifyDestroyEntity="NotifyDestroyEntity";
public const string RmiName_NotifyInventoryItemAdd="NotifyInventoryItemAdd";
public const string RmiName_GivePlayerItem="GivePlayerItem";
public const string RmiName_NotifyPlayerItemUse="NotifyPlayerItemUse";
public const string RmiName_NotifyEntityBuffAdd="NotifyEntityBuffAdd";
       
public const string RmiName_First = RmiName_SendTest;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_SendTest="";
public const string RmiName_NotifyJoinPlayer="";
public const string RmiName_NotifyLeavePlayeR="";
public const string RmiName_NotifyServerMessage="";
public const string RmiName_NotifyPlayerJobs="";
public const string RmiName_NotifyItemCreate="";
public const string RmiName_NotifyEntityMove="";
public const string RmiName_NotifyPlayerCreate="";
public const string RmiName_NotifyNPCList="";
public const string RmiName_NotifyNPCCreate="";
public const string RmiName_NotifyDestroyEntity="";
public const string RmiName_NotifyInventoryItemAdd="";
public const string RmiName_GivePlayerItem="";
public const string RmiName_NotifyPlayerItemUse="";
public const string RmiName_NotifyEntityBuffAdd="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

