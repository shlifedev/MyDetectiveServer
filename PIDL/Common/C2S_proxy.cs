




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

            
using Nettention.Proud; 
namespace Game.Network.C2S
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool SendTest(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string value)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SendTest;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, value);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SendTest, Common.SendTest);
}

public bool SendTest(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string value)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SendTest;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, value);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SendTest, Common.SendTest);
}
public bool SendTest2(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 value)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SendTest2;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, value);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SendTest2, Common.SendTest2);
}

public bool SendTest2(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 value)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SendTest2;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, value);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SendTest2, Common.SendTest2);
}
public bool ReqJoinGame(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqJoinGame;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqJoinGame, Common.ReqJoinGame);
}

public bool ReqJoinGame(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqJoinGame;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqJoinGame, Common.ReqJoinGame);
}
public bool ReqLeaveGame(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqLeaveGame;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqLeaveGame, Common.ReqLeaveGame);
}

public bool ReqLeaveGame(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqLeaveGame;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqLeaveGame, Common.ReqLeaveGame);
}
public bool ReqMove(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int EntityIndex)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqMove;
		__msg.Write(__msgid);
		MyMarshaler.Write(__msg, EntityIndex);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqMove, Common.ReqMove);
}

public bool ReqMove(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int EntityIndex)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqMove;
__msg.Write(__msgid);
MyMarshaler.Write(__msg, EntityIndex);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqMove, Common.ReqMove);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_SendTest="SendTest";
public const string RmiName_SendTest2="SendTest2";
public const string RmiName_ReqJoinGame="ReqJoinGame";
public const string RmiName_ReqLeaveGame="ReqLeaveGame";
public const string RmiName_ReqMove="ReqMove";
       
public const string RmiName_First = RmiName_SendTest;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_SendTest="";
public const string RmiName_SendTest2="";
public const string RmiName_ReqJoinGame="";
public const string RmiName_ReqLeaveGame="";
public const string RmiName_ReqMove="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

